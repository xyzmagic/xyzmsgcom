'use strict';(function(g){"object"===typeof module&&"object"===typeof module.exports?(g=g(require,exports),void 0!==g&&(module.exports=g)):"function"===typeof define&&define.amd?define(["require","exports"],g):g([],self.Comlink={})})(function(g,d){function p(a,b){q(a)&&(a=r(a));if(!t(a))throw Error("endpoint does not have all of addEventListener, removeEventListener and postMessage defined");u(a);return l(async c=>{let b=[];if("APPLY"===c.type||"CONSTRUCT"===c.type)b=c.argumentsList.map(A);c=(await B(a,
Object.assign({},c,{argumentsList:b}),v(b))).data;return w(c.value)},[],b)}function x(a){a[d.proxyValueSymbol]=!0;return a}function y(a,b){q(b)&&(b=r(b));if(!t(b))throw Error("endpoint does not have all of addEventListener, removeEventListener and postMessage defined");u(b);z(b,async function(c){if(c.data.id&&c.data.callPath){c=c.data;var k=await c.callPath.slice(0,-1).reduce((a,b)=>a[b],a),f=await c.callPath.reduce((a,b)=>a[b],a),e=f,d=[];if("APPLY"===c.type||"CONSTRUCT"===c.type)d=c.argumentsList.map(w);
if("APPLY"===c.type)try{e=await f.apply(k,d)}catch(h){e=h,e[m]=!0}if("CONSTRUCT"===c.type)try{e=new f(...d),e=x(e)}catch(h){e=h,e[m]=!0}"SET"===c.type&&(f[c.property]=c.value,e=!0);e=C(e);e.id=c.id;return b.postMessage(e,v([e]))}})}function A(a){for(const [b,k]of d.transferHandlers)if(k.canHandle(a))return{type:b,value:k.serialize(a)};let b=[];for(const c of n(a))for(const [a,f]of d.transferHandlers)f.canHandle(c.value)&&b.push({path:c.path,wrappedValue:{type:a,value:f.serialize(c.value)}});for(const c of b)c.path.slice(0,
-1).reduce((a,b)=>a[b],a)[c.path[c.path.length-1]]=null;return{type:"RAW",value:a,wrappedChildren:b}}function w(a){if(d.transferHandlers.has(a.type))return d.transferHandlers.get(a.type).deserialize(a.value);if("RAW"===a.type){for(const b of a.wrappedChildren||[]){if(!d.transferHandlers.has(b.wrappedValue.type))throw Error(`Unknown value type "${a.type}" at ${b.path.join(".")}`);const c=d.transferHandlers.get(b.wrappedValue.type).deserialize(b.wrappedValue.value);D(a.value,b.path,c)}return a.value}throw Error(`Unknown value type "${a.type}"`);
}function D(a,b,c){const d=b.slice(-1)[0];b.slice(0,-1).reduce((a,b)=>a[b],a)[d]=c}function r(a){if("Window"!==self.constructor.name)throw Error("self is not a window");return{addEventListener:self.addEventListener.bind(self),removeEventListener:self.removeEventListener.bind(self),postMessage:(b,c)=>a.postMessage(b,"*",c)}}function t(a){return"addEventListener"in a&&"removeEventListener"in a&&"postMessage"in a}function u(a){"MessagePort"===a.constructor.name&&a.start()}function z(a,b){a.addEventListener("message",
b)}function q(a){return["window","length","location","parent","opener"].every(b=>b in a)}function B(a,b,c){const d=`${E}-${F++}`;return new Promise(f=>{z(a,function h(b){b.data.id===d&&(a.removeEventListener("message",h),f(b))});b=Object.assign({},b,{id:d});a.postMessage(b,c)})}function l(a,b=[],c=function(){}){return new Proxy(c,{construct(c,d,e){return a({type:"CONSTRUCT",callPath:b,argumentsList:d})},apply(c,d,e){return"bind"===b[b.length-1]?l(a,b.slice(0,-1)):a({type:"APPLY",callPath:b,argumentsList:e})},
get(c,d,e){return"then"===d&&0===b.length?{then:()=>e}:"then"===d?(c=a({type:"GET",callPath:b}),Promise.resolve(c).then.bind(c)):l(a,b.concat(d),c[d])},set(c,d,e,g){return a({type:"SET",callPath:b,property:d,value:e})}})}function G(a){return H.some(b=>a instanceof b)}function*n(a,b=[],c=null){if(a&&(c||(c=new WeakSet),!c.has(a)&&"string"!==typeof a&&("object"===typeof a&&c.add(a),!ArrayBuffer.isView(a)))){yield{value:a,path:b};var d=Object.keys(a);for(const f of d)yield*n(a[f],[...b,f],c)}}function v(a){const b=
[];for(const c of n(a))G(c.value)&&b.push(c.value);return b}function C(a){for(const [b,c]of d.transferHandlers)if(c.canHandle(a))return a=c.serialize(a),{value:{type:b,value:a}};return{value:{type:"RAW",value:a}}}Object.defineProperty(d,"__esModule",{value:!0});d.proxyValueSymbol=Symbol("comlinkProxyValue");const H=["ArrayBuffer","MessagePort","OffscreenCanvas"].filter(a=>a in self).map(a=>self[a]),E=Math.floor(Math.random()*Number.MAX_SAFE_INTEGER),m=Symbol("throw");d.transferHandlers=new Map([["PROXY",
{canHandle:a=>!!a&&!0===a[d.proxyValueSymbol],serialize:a=>{const {port1:b,port2:c}=new MessageChannel;y(a,b);return c},deserialize:a=>p(a)}],["THROW",{canHandle:a=>a&&a[m],serialize:a=>Object.assign({},a,{message:a&&a.message,stack:a&&a.stack}),deserialize:a=>{throw Object.assign(Error(),a);}}]]);let F=0;d.proxy=p;d.proxyValue=x;d.expose=y});