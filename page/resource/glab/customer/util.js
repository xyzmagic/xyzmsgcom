'use strict';const magicNumberToMimeType=new Map([[/^%PDF-/,"application/pdf"],[/^GIF87a/,"image/gif"],[/^GIF89a/,"image/gif"],[/^\x89PNG\x0D\x0A\x1A\x0A/,"image/png"],[/^\xFF\xD8\xFF/,"image/jpeg"],[/^BM/,"image/bmp"],[/^I I/,"image/tiff"],[/^II*/,"image/tiff"],[/^MM\x00*/,"image/tiff"],[/^RIFF....WEBPVP8[LX ]/,"image/webp"]]);
function decodeImage(a,b){const c=sniffMimeType(a);try{return"image/webp"!==c||nativeWebPSupported?nativeDecode(a):b.webpDecode(a)}catch(d){throw Error("Couldn't decode image");}}function nativeDecode(a){a="createImageBitmap"in self?createImageBitmap(a):blobToImg(a);return drawableToImageData(a)}
function drawableToImageData(a,b){const {width:c=a.width,height:d=a.height,sx:e=0,sy:f=0,sw:g=a.width,sh:h=a.height}=b;b=document.createElement("canvas");b.width=c;b.height=d;b=b.getContext("2d");if(!b)throw Error("Could not create canvas context");b.drawImage(a,e,f,g,h,0,0,c,d);return b.getImageData(0,0,c,d)}
async function sniffMimeType(a){a=await blobToArrayBuffer(a.slice(0,16));a=Array.from(new Uint8Array(a)).map(a=>String.fromCodePoint(a)).join("");for(const [b,c]of magicNumberToMimeType)if(b.test(a))return c;return""}function blobToArrayBuffer(a){return(new Response(a)).arrayBuffer()}
function getMimeType(a){var b=new FileReader;b.onload=a=>{a=a.target.result.slice(0,16);a=Array.from(new Uint8Array(a)).map(a=>String.fromCodePoint(a)).join("");for(const [b,c]of magicNumberToMimeType)if(b.test(a))return c;return""};b.readAsArrayBuffer(a)}function convertDataURIToBinary(a){var b=a.indexOf(";base64,")+8;a=a.substring(b);a=window.atob(a);b=a.length;var c=new Uint8Array(new ArrayBuffer(b));for(i=0;i<b;i++)c[i]=a.charCodeAt(i);return c};